I"~"<p>Breath Monitoring for Stress Management 	(December 2021)
Technologies used: Arduino, Python
Developed a device to record the depth, duration and rate of breathing using piezo-electric sensors. The breath wave was used by a client to evaluate the effectiveness stress management therapies.<br />
Virtual Career Fair Platform	 (November 2020)
Technologies used: ReactJS, JavaScript, HTML, CSS	
Designed and developed an online platform for scheduling and monitoring interview of over 100 students. This was instrumental in streamlining the flow of candidate at the career fair and was also used the following year. 
Resistance band exercise monitor 	(2020)
Technologies used: NodeMCU, MATLAB, JavaScript, HTML	
Developed a wireless exercise monitor that uses a strain gauge to measure force applied on the resistance band. Designed an experimental procedure to calibrate the force sensor (strain gauge). 
Diabetes detection using Heart Rate Variability  	(2020)
Technologies used: Watson Studio, Python, scikit-learn	
Used 24-hour ECG data from D1NAMO dataset and from the SWELL dataset to classify subjects as healthy or diabetic using heart rate variation statistics. A multilayer perceptron neural network was implemented using scikit-learn Python library. 
Progressive Web Application – uMora Mathematics Competition	 (2020)
Technologies used: ReactJS, JavaScript, HTML, CSS	
Designed and developed the web application for uMora Mathematics competition 2020, a math Olympiad competition organised by the Electronics Club, University of Moratuwa. This was an online quiz with over 5000 participants. See it on https://umoraquiz.web.app/
Progressive Web Application – Forestpin.com 	(2019)
Technologies used: AngularJS, JavaScript, HTML, CSS	
Designed and developed the website for Forestpin.com, a data analytics startup. This is a responsive website that is also a progressive web app built using the Angular JavaScript framework 
Image down sampler on FPGA 	(2019)
Technologies used: FPGA, Verilog, Intel Quartus	
Programmed an FPGA to reduce resolution of an image. An in-depth understanding of computer architecture was required for implementing hardware-level matrix calculations. Intel Quartus Lite software was used to program the FPGA using Verilog hardware description language. 
Analog Wall Following Robot 	(2018)
Technologies used: Op-Amp, Altium Designer, NI Multisim	
A wall following robot with a PID control system that uses only Operational Amplifiers (doesn’t use any microcontrollers). The circuit schematics were simulated using Multisim and the circuit layouts were designed on Altium Designer. 
Temperature Controlled Solder Iron 	(2018)
Technologies used: Thyristors, SolidWorks, Altium Designer, Multisim	
Created a temperature-controlled A.C soldering iron that uses a thyristor-based power control system. 
Autonomous Line Follower Robot 	(2017)
Technologies used: PIC Microcontroller, Embedded C, MPLAB, Proteus	
Created an autonomous robot that can navigate a maze following a white line on black background and handle slopes up to 30o. PIC microcontroller programmed using embedded C language on MPLAB. Proteus Design Suite was used for designing and simulating the circuits. 
Find out more on www.</p>

<p>To give your project a background in the portfolio page, just add the img tag to the front matter like so:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
layout: page
title: project
description: a project with a background image
img: /assets/img/12.jpg
---
</code></pre></div></div>

<div class="row">
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/1-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/1-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/1-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/1.jpg" title="example image" />

  </picture>

</figure>

    </div>
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/3-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/3-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/3-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/3.jpg" title="example image" />

  </picture>

</figure>

    </div>
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/5-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/5-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/5-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/5.jpg" title="example image" />

  </picture>

</figure>

    </div>
</div>
<div class="caption">
    Caption photos easily. On the left, a road goes through a tunnel. Middle, leaves artistically fall in a hipster photoshoot. Right, in another hipster photoshoot, a lumberjack grasps a handful of pine needles.
</div>
<div class="row">
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/5-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/5-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/5-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/5.jpg" title="example image" />

  </picture>

</figure>

    </div>
</div>
<div class="caption">
    This image can also have a caption. It's like magic.
</div>

<p>You can also put regular text between your rows of images.
Say you wanted to write a little bit about your project before you posted the rest of the images.
You describe how you toiled, sweated, <em>bled</em> for your project, and then… you reveal it’s glory in the next row of images.</p>

<div class="row justify-content-sm-center">
    <div class="col-sm-8 mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/6-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/6-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/6-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/6.jpg" title="example image" />

  </picture>

</figure>

    </div>
    <div class="col-sm-4 mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/11-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/11-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/11-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/11.jpg" title="example image" />

  </picture>

</figure>

    </div>
</div>
<div class="caption">
    You can also have artistically styled 2/3 + 1/3 images, like these.
</div>

<p>The code is simple.
Just wrap your images with <code class="language-plaintext highlighter-rouge">&lt;div class="col-sm"&gt;</code> and place them inside <code class="language-plaintext highlighter-rouge">&lt;div class="row"&gt;</code> (read more about the <a href="https://getbootstrap.com/docs/4.4/layout/grid/">Bootstrap Grid</a> system).
To make images responsive, add <code class="language-plaintext highlighter-rouge">img-fluid</code> class to each; for rounded corners and shadows use <code class="language-plaintext highlighter-rouge">rounded</code> and <code class="language-plaintext highlighter-rouge">z-depth-1</code> classes.
Here’s the code for the last row of images above:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row justify-content-sm-center"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-sm-8 mt-3 mt-md-0"</span><span class="nt">&gt;</span>
        {% include figure.html path="assets/img/6.jpg" title="example image" class="img-fluid rounded z-depth-1" %}
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-sm-4 mt-3 mt-md-0"</span><span class="nt">&gt;</span>
        {% include figure.html path="assets/img/11.jpg" title="example image" class="img-fluid rounded z-depth-1" %}
    <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

:ET